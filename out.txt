###   Equivalent States  ###
TerminatedState(id: 1, constraints: [Not(intHeap[this][systemActive] == 1), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 1, constraints: [intHeap[this][pumpRunning] == 1, intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(intHeap[this][systemActive] == 1)])
TerminatedState(id: 6, constraints: [Not(intHeap[this][systemActive] == 1), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), intHeap[this][waterLevel] == WATER_LEVEL_NORMAL, intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 10, constraints: [intHeap[this][pumpRunning] == 1, intHeap[this][waterLevel] == WATER_LEVEL_NORMAL, Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), Not(intHeap[this][systemActive] == 1)])
TerminatedState(id: 7, constraints: [Not(intHeap[this][systemActive] == 1), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), Not(intHeap[this][waterLevel] == WATER_LEVEL_NORMAL), intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 11, constraints: [intHeap[this][pumpRunning] == 1, Not(intHeap[this][waterLevel] == WATER_LEVEL_NORMAL), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), Not(intHeap[this][systemActive] == 1)])
TerminatedState(id: 5, constraints: [Not(intHeap[this][systemActive] == 1), Not(intHeap[this][pumpRunning] == 1)])
	TerminatedState(id: 9, constraints: [Not(intHeap[this][pumpRunning] == 1), Not(intHeap[this][systemActive] == 1)])

### Overlapping States ###
TerminatedState(id: 3, constraints: [intHeap[this][systemActive] == 1, Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), intHeap[this][waterLevel] == WATER_LEVEL_NORMAL, intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 0, constraints: [intHeap[this][pumpRunning] == 1, intHeap[this][waterLevel] == WATER_LEVEL_NORMAL, Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), isHighWaterSensorDry == 1, intHeap[this][systemActive] == 1])
TerminatedState(id: 2, constraints: [intHeap[this][systemActive] == 1, Not(intHeap[this][pumpRunning] == 1)])
	TerminatedState(id: 2, constraints: [And(intHeap[this][pumpRunning] == 0, isHighWaterLevel == 1), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(isHighWaterSensorDry == 1), intHeap[this][systemActive] == 1, intHeap[this][waterLevel] == WATER_LEVEL_HIGH])
TerminatedState(id: 2, constraints: [intHeap[this][systemActive] == 1, Not(intHeap[this][pumpRunning] == 1)])
	TerminatedState(id: 3, constraints: [Not(intHeap[this][pumpRunning] == 1), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), isHighWaterSensorDry == 1, intHeap[this][systemActive] == 1])
TerminatedState(id: 4, constraints: [intHeap[this][systemActive] == 1, Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), Not(intHeap[this][waterLevel] == WATER_LEVEL_NORMAL), intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 4, constraints: [intHeap[this][pumpRunning] == 1, Not(intHeap[this][waterLevel] == WATER_LEVEL_NORMAL), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH), isHighWaterSensorDry == 1, intHeap[this][systemActive] == 1])
TerminatedState(id: 0, constraints: [intHeap[this][systemActive] == 1, intHeap[this][waterLevel] == WATER_LEVEL_HIGH, intHeap[this][pumpRunning] == 1])
	TerminatedState(id: 5, constraints: [intHeap[this][pumpRunning] == 1, And(Not(intHeap[this][pumpRunning] == 0),
    isHighWaterLevel == 1)), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(isHighWaterSensorDry == 1), intHeap[this][systemActive] == 1])
TerminatedState(id: 2, constraints: [intHeap[this][systemActive] == 1, Not(intHeap[this][pumpRunning] == 1)])
	TerminatedState(id: 8, constraints: [And(Not(intHeap[this][pumpRunning] == 0),
    isHighWaterLevel == 1)), Not(intHeap[this][pumpRunning] == 1), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(isHighWaterSensorDry == 1), intHeap[this][systemActive] == 1])

###     New States     ###
TerminatedState(id: 6, constraints: [And(intHeap[this][pumpRunning] == 0, isHighWaterLevel == 1), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(isHighWaterSensorDry == 1), intHeap[this][systemActive] == 1, intHeap[this][waterLevel] == WATER_LEVEL_NORMAL, Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH)])
TerminatedState(id: 7, constraints: [And(intHeap[this][pumpRunning] == 0, isHighWaterLevel == 1), intHeap[this][waterLevel] == WATER_LEVEL_HIGH, Not(isHighWaterSensorDry == 1), intHeap[this][systemActive] == 1, Not(intHeap[this][waterLevel] == WATER_LEVEL_NORMAL), Not(intHeap[this][waterLevel] == WATER_LEVEL_HIGH)])
